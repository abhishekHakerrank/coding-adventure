package com.marsh.weather.service;

import java.net.URI;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.boot.web.client.RestTemplateBuilder;
import org.springframework.http.MediaType;
import org.springframework.http.RequestEntity;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;
import org.springframework.web.util.UriTemplate;

import com.marsh.weather.model.WeatherForecast;

@Service
public class WeatherService {

	
	private static final Logger logger = LoggerFactory.getLogger(WeatherService.class);
	private static final String WEATHER_FORECAST_URL = "https://api.openweathermap.org/data/2.5/forecast?zip={zip code}&appid= {apiKey}";
	private final RestTemplate restTemplate;

	public WeatherService(RestTemplateBuilder restTemplateBuilder) {
		this.restTemplate = restTemplateBuilder.build();
	}
	public WeatherForecast weatherForecastData(String zipCode) {
		
		logger.info("Requesting weather forecast for {}/{}", zipCode);
		URI url = new UriTemplate(WEATHER_FORECAST_URL).expand(zipCode, "80ac5f9d14dab30b4a36db9fa41e2a10");
		return invoke(url, WeatherForecast.class);
		
	}
	
	
	private <T> T invoke(URI url, Class<T> responseType) {
		RequestEntity<?> request = RequestEntity.get(url)
				.accept(MediaType.APPLICATION_JSON).build();
		ResponseEntity<T> exchange = this.restTemplate
				.exchange(request, responseType);
		return exchange.getBody();
	}
	
	
}
